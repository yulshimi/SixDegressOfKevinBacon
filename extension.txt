1. The problem I solved
  When a file containing a bunch of actors and movies and years like movie_casts.tsv, it is not guaranteed that all actors are connected at the end. My extension.cpp checks
whether all actors are eventually connected or not. 

2. How I solved it
  When a graph is created, a group number is assigned to each actor. When they are connected at some point while a graph is being created, they are assigned the same 
group number, so if there are more than one group number after loading all actors and movies in a given input file, it means that all actors are not connected.

3. How I tested it
  I run my program on movie_casts.tsv and movie_casts_grading.tsv. The result is they are all connected. I manipulated "medium_weighted_graph.tsv" by adding actors and movies
which are not real movies and actors, so there is no way for them to be connected by the name of movie. I have got the right result.

4. How the grader run
  After compiling all files by typing "make all"(I included all files including "extension.cpp"), type "./extension [input_file]". I included my test input file
"extension_data.tsv". When the grader runs my program on "movie_casts.tsv", it takes too long becuase my program is not optimized yet, so it will be very appreciating 
when tesing my program on "movie_casts.tsv" if the grader waits until my program prints out the result. If my program runs on "movie_casts_grading.tsv", it will be done 
just in about 10 seconds.

ex) ./extension extension_data.tsv

5. Data set
  My program is based on "movie_casts.tsv". As the assignment manual says, I did not include this file for submission. 

6. Included test file is "extension_data.tsv"  
